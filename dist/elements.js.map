{"version":3,"file":"elements.js","sources":["../src/elements.ts"],"sourcesContent":["function createGemkitElement(elName: string, props: Record<string, any>): HTMLElement {\r\n\r\n    const el = document.createElement(elName);\r\n\r\n    if (props.onClick)\r\n        el.onclick = props.onClick;\r\n\r\n    if (props.className) {\r\n        const splitted = props.className.split(' ');\r\n        splitted.forEach((className: string) => el.classList.add(className));\r\n    }\r\n\r\n    if (props.htmlType)\r\n        el.setAttribute('type', props.htmlType);\r\n\r\n    if (props.setReference)\r\n        props.setReference(el);\r\n\r\n    Object.entries(props).forEach(([key, value]) => {\r\n        const illegalProps = ['onClick', 'className', 'htmlType', 'setReference'];\r\n        if (!illegalProps.includes(key))\r\n            el.setAttribute(key, value);\r\n    });\r\n\r\n    props.children?.forEach((child: string | number | boolean | HTMLElement) => {\r\n        const isText = typeof child === 'string' || typeof child === 'number' || typeof child === 'boolean';\r\n        el.appendChild(isText ? document.createTextNode(child as string) : child);\r\n    });\r\n\r\n    return el;\r\n}\r\n\r\nexport const Div = (props: Record<string, any>) => createGemkitElement('div', props);\r\n\r\nexport const Button = (props: Record<string, any>) => createGemkitElement('button', props);\r\n\r\nexport const Input = (props: Record<string, any>) => createGemkitElement('input', props);\r\n\r\nexport const H1 = (props: Record<string, any>) => createGemkitElement('h1', props);\r\nexport const H2 = (props: Record<string, any>) => createGemkitElement('h2', props);\r\nexport const H3 = (props: Record<string, any>) => createGemkitElement('h3', props);\r\nexport const H4 = (props: Record<string, any>) => createGemkitElement('h4', props);\r\nexport const H5 = (props: Record<string, any>) => createGemkitElement('h5', props);\r\nexport const H6 = (props: Record<string, any>) => createGemkitElement('h6', props);\r\n\r\nexport const P = (props: Record<string, any>) => createGemkitElement('p', props);\r\n\r\nexport const Span = (props: Record<string, any>) => createGemkitElement('span', props);\r\n\r\nexport const Img = (props: Record<string, any>) => createGemkitElement('img', props);\r\n\r\nexport const A = (props: Record<string, any>) => createGemkitElement('a', props);\r\nexport const Link = (props: Record<string, any>) => {\r\n    const { to, ...rest } = props;\r\n    return createGemkitElement('a', { ...rest, href: `${window.location.origin}/#${to}` });\r\n};\r\n\r\nexport const Ul = (props: Record<string, any>) => createGemkitElement('ul', props);\r\nexport const Ol = (props: Record<string, any>) => createGemkitElement('ol', props);\r\n\r\nexport const Li = (props: Record<string, any>) => createGemkitElement('li', props);\r\n\r\nexport const List = (props: Record<string, any>) => {\r\n    const { list, fn, ...rest } = props;\r\n\r\n    const ul = createGemkitElement('ul', { ...rest });\r\n\r\n    list.forEach((item: any, i: number) => {\r\n        const modified = fn(item, i);\r\n        ul.appendChild(createGemkitElement('li', {\r\n            children: [modified]\r\n        }));\r\n    });\r\n\r\n    return ul;\r\n};"],"names":[],"mappings":"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"}